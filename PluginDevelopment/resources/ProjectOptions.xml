<?xml version="1.0" encoding="UTF-8" ?>
<myplugin.generator.options.SerializableProjectOptions>
	<path>C:/temp</path>
	<typeMappings>
		<myplugin.generator.options.TypeMapping>
			<uMLType>date</uMLType>
			<destType>Date</destType>
			<libraryName>java.util</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>int</uMLType>
			<destType>int</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>Integer</uMLType>
			<destType>Integer</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>long</uMLType>
			<destType>long</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>String</uMLType>
			<destType>String</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>char</uMLType>
			<destType>Char</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>float</uMLType>
			<destType>float</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>double</uMLType>
			<destType>double</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>boolean</uMLType>
			<destType>boolean</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>Boolean</uMLType>
			<destType>Boolean</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
		<myplugin.generator.options.TypeMapping>
			<uMLType>byte</uMLType>
			<destType>byte</destType>
			<libraryName>java.lang</libraryName>
		</myplugin.generator.options.TypeMapping>
	</typeMappings>
	<generatorOptions>
		<entry>
			<string>AppPropertiesGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/demo/src/main/resources</outputPath>
				<templateName>appProperties</templateName>
				<templateDir>templates/backend</templateDir>
				<outputFileName>application.properties</outputFileName>
				<overwrite>false</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>PomXMLGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/demo</outputPath>
				<templateName>pom</templateName>
				<templateDir>templates/backend</templateDir>
				<outputFileName>pom.xml</outputFileName>
				<overwrite>false</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>ModelGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/demo/src/main/java/demo/generated/model</outputPath>
				<templateName>model</templateName>
				<templateDir>templates/backend</templateDir>
				<outputFileName>{0}.java</outputFileName>
				<overwrite>true</overwrite>
				<filePackage>generated</filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>RepositoryGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/demo/src/main/java/demo/generated/repository/</outputPath>
				<templateName>repository</templateName>
				<templateDir>templates/backend</templateDir>
				<outputFileName>{0}Repository.java</outputFileName>
				<overwrite>true</overwrite>
				<filePackage>generated</filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>AbstractServiceGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/demo/src/main/java/demo/generated/service/abs/</outputPath>
				<templateName>abstractService</templateName>
				<templateDir>templates/backend</templateDir>
				<outputFileName>Abstract{0}Service.java</outputFileName>
				<overwrite>true</overwrite>
				<filePackage>generated</filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>ServiceGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/demo/src/main/java/demo/generated/service/</outputPath>
				<templateName>service</templateName>
				<templateDir>templates/backend</templateDir>
				<outputFileName>{0}Service.java</outputFileName>
				<overwrite>true</overwrite>
				<filePackage>generated</filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>AbstractDTOGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/demo/src/main/java/demo/generated/dto/abs</outputPath>
				<templateName>abstractDTO</templateName>
				<templateDir>templates/backend</templateDir>
				<outputFileName>Abstract{0}DTO.java</outputFileName>
				<overwrite>true</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>ConcreteDTOGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/demo/src/main/java/demo/generated/dto</outputPath>
				<templateName>concreteDTO</templateName>
				<templateDir>templates/backend</templateDir>
				<outputFileName>{0}DTO.java</outputFileName>
				<overwrite>true</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
    	</entry>
		<entry>
			<string>IndexJSGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/frontend/src</outputPath>
				<templateName>indexjs</templateName>
				<templateDir>templates/frontend/src</templateDir>
				<outputFileName>index.js</outputFileName>
				<overwrite>true</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>IndexHTMLGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/frontend/public</outputPath>
				<templateName>indexhtml</templateName>
				<templateDir>templates/frontend/public</templateDir>
				<outputFileName>index.html</outputFileName>
				<overwrite>true</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>ContainerGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/frontend/src/containers</outputPath>
				<templateName>container</templateName>
				<templateDir>templates/frontend/src/containers</templateDir>
				<outputFileName>{0}Container.js</outputFileName>
				<overwrite>true</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>TableViewGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/frontend/src/components/views</outputPath>
				<templateName>tableview</templateName>
				<templateDir>templates/frontend/src/components/views</templateDir>
				<outputFileName>{0}TableView.js</outputFileName>
				<overwrite>true</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
		<entry>
			<string>FormGenerator</string>
			<myplugin.generator.options.GeneratorOptions>
				<outputPath>{path}/frontend/src/components/forms</outputPath>
				<templateName>form</templateName>
				<templateDir>templates/frontend/src/components/forms</templateDir>
				<outputFileName>{0}Form.js</outputFileName>
				<overwrite>true</overwrite>
				<filePackage></filePackage>
			</myplugin.generator.options.GeneratorOptions>
		</entry>
	</generatorOptions>
	<staticResources>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/frontend</sourceFolder>
			<sourceFilename>package.json</sourceFilename>
			<destinationFolder>{path}/frontend</destinationFolder>
			<destinationFilename>package.json</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/frontend</sourceFolder>
			<sourceFilename>README.md</sourceFilename>
			<destinationFolder>{path}/frontend</destinationFolder>
			<destinationFilename>README.md</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/frontend</sourceFolder>
			<sourceFilename>frontend.gitignore</sourceFilename>
			<destinationFolder>{path}/frontend</destinationFolder>
			<destinationFilename>.gitignore</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend</sourceFolder>
			<sourceFilename>README.md</sourceFilename>
			<destinationFolder>{path}/demo</destinationFolder>
			<destinationFilename>README.md</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend</sourceFolder>
			<sourceFilename>backend.gitignore</sourceFilename>
			<destinationFolder>{path}/demo</destinationFolder>
			<destinationFilename>.gitignore</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend</sourceFolder>
			<sourceFilename>mvnw</sourceFilename>
			<destinationFolder>{path}/demo</destinationFolder>
			<destinationFilename>mvnw</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend</sourceFolder>
			<sourceFilename>mvnw.cmd</sourceFilename>
			<destinationFolder>{path}/demo</destinationFolder>
			<destinationFilename>mvnw.cmd</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend</sourceFolder>
			<sourceFilename>DemoApplication.java</sourceFilename>
			<destinationFolder>{path}/demo/src/main/java/demo</destinationFolder>
			<destinationFilename>DemoApplication.java</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend</sourceFolder>
			<sourceFilename>maven-wrapper.jar</sourceFilename>
			<destinationFolder>{path}/demo/.mvn/wrapper</destinationFolder>
			<destinationFilename>mvn-wrapper.jar</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend</sourceFolder>
			<sourceFilename>maven-wrapper.properties</sourceFilename>
			<destinationFolder>{path}/demo/.mvn/wrapper</destinationFolder>
			<destinationFilename>mvn-wrapper.properties</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend</sourceFolder>
			<sourceFilename>MavenWrapperDownloader.java</sourceFilename>
			<destinationFolder>{path}/demo/.mvn/wrapper</destinationFolder>
			<destinationFilename>MavenWrapperDownloader.java</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend/exception</sourceFolder>
			<sourceFilename>NotFoundException.java</sourceFilename>
			<destinationFolder>{path}/demo/src/main/java/demo/generated/exception</destinationFolder>
			<destinationFilename>NotFoundException.java</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
		<myplugin.generator.options.StaticResource>
			<sourceFolder>static/backend/exception</sourceFolder>
			<sourceFilename>ExceptionResolver.java</sourceFilename>
			<destinationFolder>{path}/demo/src/main/java/demo/generated/exception</destinationFolder>
			<destinationFilename>ExceptionResolver.java</destinationFilename>
			<overwrite>true</overwrite>
		</myplugin.generator.options.StaticResource>
	</staticResources>
</myplugin.generator.options.SerializableProjectOptions>
